<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="FreeBbs">
	
	<select id="bbslist" parameterType="a.dto.BbsParam" resultType="a.dto.FreePostDto">
		select bbs_seq, user_id, title, content, readcount, likecount, cmtcount, wdate, update_date, del
		from (
			select row_number() over(order by bbs_seq desc) as rnum, bbs_seq, user_id, title, content, readcount, likecount, cmtcount, wdate, update_date, del 
			from FreePost
			<if test="choice != null and choice != '' and search != null and search != '' ">
				<choose>
					<when test="choice=='title'">
						where title like concat('%', #{search}, '%')
					</when>
					<when test="choice=='content'">
						where content like concat('%', #{search}, '%')
					</when>
					<when test="choice=='writer'">
						where user_id = #{search}
					</when>
				</choose>
			</if>
		) a where rnum between #{start} and #{end}
	</select>
	
	<!-- 글의 총수 -->
	<select id="getAllBbs" parameterType="a.dto.BbsParam" resultType="java.lang.Integer">
		select ifnull(count(*),0) 
		from freepost
		<if test="choice != null and choice != '' and search != null and search != '' ">
			<choose>
				<when test="choice=='title'">
					where title like concat('%', #{search}, '%')
				</when>
				<when test="choice=='content'">
					where content like concat('%', #{search}, '%')
				</when>
				<when test="choice=='writer'">
					where user_id = #{search}
				</when>
			</choose>
		</if>
	</select>
		
	<insert id="writeBbs" parameterType="a.dto.FreePostDto">
	    insert into FreePost(user_id, title, content, wdate)
	    values (#{user_id}, #{title}, #{content}, now())
	</insert>
		
	<insert id="multiimg" parameterType="a.dto.BbsImgVO">
	    INSERT INTO multiimg (img_name, img_path, img_type)
	    VALUES (#{img_name}, #{img_path}, #{img_type})
	</insert>
	
	<insert id="img_rel" parameterType="int">
	    INSERT INTO img_rel (bbs_seq, img_seq)
	    VALUES ( #{bbs_seq}, LAST_INSERT_ID() )
	</insert>
	
	<!-- 조회수 증가(중복고려 X) -->
	<update id="increaseReadcount" parameterType="int">	
		UPDATE FreePost SET readcount = readcount + 1 WHERE bbs_seq = #{bbs_seq}
	</update>
	
    <select id="getBbs" parameterType="int" resultType="a.dto.FreePostDto">
        select *
        from FreePost
        WHERE bbs_seq = #{bbs_seq}
    </select>
    
    <!-- detail.jsp와 delete시에도 사용 가능. -->
	<select id="getImg" parameterType="int" resultType="a.dto.BbsImgVO">
	    SELECT i.img_seq AS img_seq, i.img_path AS img_path, i.img_name AS img_name
	    FROM MultiImg i
	    JOIN IMG_REL r ON i.img_seq = r.img_seq
	    WHERE r.bbs_seq = #{bbs_seq}
	</select>
	
	<!-- bbs_seq값에 해당하는 FreeComment 리스트 반환 -->
	<!-- 삭제된 댓글들은 jsp파일에서 del = 0인경우 "삭제된 댓글입니다." 로표현할 예정. -->
	<select id="getComment" parameterType="int" resultType="a.dto.FreeCommentVO">
		select * from freecomment
		where bbs_seq = #{bbs_seq}
		<!-- order by reg_cmtdate DESC -->
	</select>

	
	<!-- DB에서 del을 1로 설정. -->
	<update id="deleteFreePost" parameterType="int">
		 UPDATE FreePost SET del = 1 WHERE bbs_seq = #{bbs_seq}
	</update>
	
	<!-- 연관테이블 먼저 삭제!!! -->
	<delete id="deleteimg_rel" parameterType="int">
		DELETE FROM IMG_REL 
		WHERE bbs_seq = #{bbs_seq}
	</delete>
	
	<delete id="deleteMultiImg" parameterType="int">
		DELETE FROM MultiImg 
		WHERE img_seq 
				IN (SELECT img_seq FROM IMG_REL WHERE bbs_seq = #{bbs_seq})
	</delete>
	
	<update id="updateBbs" parameterType="map">
		UPDATE FreePost SET
			title = #{dto.title},
			content = #{dto.content},
			wdate = CURRENT_TIMESTAMP,
			update_date = CURRENT_TIMESTAMP
		WHERE bbs_seq = #{bbs_seq}
	</update>
	
<select id="getWitor" parameterType="int" resultType="a.dto.MemberDto">
		SELECT m.*
		FROM Member2 m
		JOIN FreePost f ON m.user_id = f.user_id
		WHERE f.bbs_seq = #{bbs_seq};	
	</select>
	
	<select id ="getCmtWritors" parameterType="int" resultType="a.dto.MemberDto">
		SELECT *
		FROM Member2 m
		INNER JOIN FreeComment fc ON m.user_id = fc.user_id
		INNER JOIN FreePost fp ON fc.bbs_seq = fp.bbs_seq
		WHERE fp.bbs_seq = #{bbs_seq}
		ORDER BY fc.comment_seq ASC
	</select>
	
	<!-- 
	<select id="getlikecount" parameterType="a.dto.LikePostDto">
		select *
		from likepost
		where user_id = #{user_id} and bbs_seq = #{bbs_seq}
	</select>
	 -->
<!--     <select id="getImgList" parameterType="int" resultMap="a.dto.BbsImgVO">
	  SELECT mi.img_seq, mi.img_name, mi.img_path, mi.img_type
	  FROM FreePost fp
	  JOIN IMG_REL ir ON fp.bbs_seq = ir.bbs_seq
	  JOIN MultiImg mi ON ir.img_seq = mi.img_seq
	  WHERE fp.bbs_seq = #{bbs_seq}
	</select>  -->

<!-- 메인화면에 좋아요 수 5개 뿌리기 -->
<select id="getMainBbs" resultType="a.dto.FreePostDto">
	select *
	from FreePost
	order by likecount desc limit 5;
</select>

</mapper>